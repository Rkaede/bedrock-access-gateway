Description: Bedrock Access Gateway - OpenAI-compatible RESTful APIs for Amazon Bedrock
Transform: AWS::LanguageExtensions

Parameters:
  ApiKeyParam:
    Type: String
    Default: ""
    Description: The parameter name in System Manager used to store the API Key, leave blank to use a default key

Resources:
  # ------------------------------------------------------------------------------------
  # IAM Role & Policy for the Lambda function
  # ------------------------------------------------------------------------------------
  ProxyApiHandlerServiceRoleBE71BFB1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  ProxyApiHandlerServiceRoleDefaultPolicy86681202:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - bedrock:ListFoundationModels
              - bedrock:ListInferenceProfiles
            Effect: Allow
            Resource: "*"
          - Action:
              - bedrock:InvokeModel
              - bedrock:InvokeModelWithResponseStream
            Effect: Allow
            Resource:
              - arn:aws:bedrock:*::foundation-model/*
              - arn:aws:bedrock:*:*:inference-profile/*
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":parameter/"
                  - Ref: ApiKeyParam
        Version: "2012-10-17"
      PolicyName: ProxyApiHandlerServiceRoleDefaultPolicy86681202
      Roles:
        - Ref: ProxyApiHandlerServiceRoleBE71BFB1

  # ------------------------------------------------------------------------------------
  # Lambda function
  # ------------------------------------------------------------------------------------
  ProxyApiHandlerEC15A492:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        ImageUri:
          Fn::Join:
            - ""
            - - 366590864501.dkr.ecr.
              - Ref: AWS::Region
              - "."
              - Ref: AWS::URLSuffix
              - /bedrock-proxy-api:latest
      Description: Bedrock Proxy API Handler
      Environment:
        Variables:
          API_KEY_PARAM_NAME:
            Ref: ApiKeyParam
          DEBUG: "false"
          DEFAULT_MODEL:
            Fn::FindInMap:
              - ProxyRegionTable03E5BEB3
              - Ref: AWS::Region
              - model
              # fallback if region not found:
              - DefaultValue: anthropic.claude-3-sonnet-20240229-v1:0
          DEFAULT_EMBEDDING_MODEL: cohere.embed-multilingual-v3
          ENABLE_CROSS_REGION_INFERENCE: "true"
      MemorySize: 1024
      PackageType: Image
      Role:
        Fn::GetAtt:
          - ProxyApiHandlerServiceRoleBE71BFB1
          - Arn
      Timeout: 300
    DependsOn:
      - ProxyApiHandlerServiceRoleDefaultPolicy86681202
      - ProxyApiHandlerServiceRoleBE71BFB1

  # ------------------------------------------------------------------------------------
  # API Gateway Resources
  # ------------------------------------------------------------------------------------
  ProxyApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: "BedrockProxyAPI"

  ProxyApiV1Resource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: 
        Ref: ProxyApiGateway
      ParentId: 
        Fn::GetAtt: 
          - ProxyApiGateway
          - RootResourceId
      PathPart: "v1"

  ProxyApiV1MethodAny:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: 
        Ref: ProxyApiGateway
      ResourceId: 
        Ref: ProxyApiV1Resource
      HttpMethod: "ANY"
      AuthorizationType: "NONE"
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS_PROXY"
        Uri:
          Fn::Sub: >-
            arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProxyApiHandlerEC15A492.Arn}/invocations

  ProxyApiDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ProxyApiGateway
      StageName: "prod"
    DependsOn:
      - ProxyApiV1MethodAny

  ProxyApiHandlerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: 
        Ref: ProxyApiHandlerEC15A492
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${ProxyApiGateway}/*/*"

# ------------------------------------------------------------------------------------
# Mappings
# ------------------------------------------------------------------------------------
Mappings:
  ProxyRegionTable03E5BEB3:
    us-east-1:
      model: anthropic.claude-3-sonnet-20240229-v1:0

# ------------------------------------------------------------------------------------
# Outputs
# ------------------------------------------------------------------------------------
Outputs:
  APIBaseUrl:
    Description: Proxy API Base URL (OPENAI_API_BASE)
    Value:
      Fn::Sub: >-
        https://${ProxyApiGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/prod/v1
